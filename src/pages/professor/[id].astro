---
// src/pages/receitas/[id].astro

import { getCollection } from "astro:content";
import Base from "@/layouts/Base.astro";
import PageHeader from "@/partials/PageHeader.astro"; // Cabeçalho da página
import type { CollectionEntry } from "astro:content";
import RecipeHeader from "@/partials/RecipeHeader.astro";
import ItensTable from "@/components/ItensTable.astro";

// Obter todos os itens da coleção 'professor'
const professorEntries = await getCollection("professor");
const recipesData = professorEntries[0]?.data.recipes || [];

// Função que gera os caminhos estáticos para cada receita
export async function getStaticPaths() {
  // Recupera a coleção "professor" que contém as receitas
  const professorEntries = await getCollection("professor");

  // Acessa a lista de receitas dentro da coleção e gera os paths
  const recipesData = professorEntries[0]?.data.recipes || [];

  // Gera os paths com base no id (ou qualquer outro identificador único)
  const paths = recipesData.map((recipe) => ({
    params: { id: recipe.id.toString() }, // ou use recipe.slug, se for o caso
  }));

  return paths;
}

// Obter o ID da URL
const { id } = Astro.params; // Pegando o parâmetro 'id' diretamente da URL

// Encontrar a receita com o ID correspondente
const selectedRecipe = recipesData.find((r) => r.id === parseInt(id));

if (!selectedRecipe) {
  throw new Error("Receita não encontrada");
}
---

<Base
  title={selectedRecipe.name}
  meta_title={professorEntries[0].data.meta_title}
  description={professorEntries[0].data.description}
  image={professorEntries[0].data.image}
>
  <RecipeHeader
    name={selectedRecipe.name}
    recipe_img={selectedRecipe.recipe_img}
    level={selectedRecipe.difficulty}
    time={selectedRecipe.preparation_time}
    quantity={selectedRecipe.servings}
  />

  <section class="section">
    <div class="container">
      <h3>Itens:</h3>
      <ItensTable items={selectedRecipe.ingredients} />
      <!-- <ul>
        {
          selectedRecipe.ingredients.map((ingredient, index) => (
            <li key={index}>
              {ingredient.name}: {ingredient.quantity}
            </li>
          ))
        }
      </ul> -->
    </div>
  </section>
</Base>
