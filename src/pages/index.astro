---
import ImageMod from "@/components/ImageMod.astro";
import LuckyCalculator from "@/helpers/LuckyCalc";
import Base from "@/layouts/Base.astro";
import { markdownify } from "@/lib/utils/textConverter";
import CallToAction from "@/partials/CallToAction.astro";
import Testimonial from "@/partials/Testimonial.astro";
import type { Button, Feature } from "@/types";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";
import { FaCheck } from "react-icons/fa";

interface Homepage {
  banner: {
    title: string;
    content: string;
    image: string;
    button: Button;
  };
  features: Feature[];
}

const homepage = (await getEntry(
  "homepage",
  "-index",
)) as CollectionEntry<"homepage">;

const testimonial = (await getEntry(
  "testimonialSection",
  "testimonial",
)) as CollectionEntry<"testimonialSection">;

const call_to_action = (await getEntry(
  "ctaSection",
  "call-to-action",
)) as CollectionEntry<"ctaSection">;

const { banner, features } = homepage.data as Homepage;
---

<Base>
  <!-- Banner -->
  <section class="section pt-14">
    <div class="container">
      <div class="row justify-center">
        <div class="lg:col-7 md:col-9 mb-8 text-center">
          <h1
            set:html={markdownify(banner.title)}
            class="mb-4 text-h3 lg:text-h1"
          />
          <p set:html={markdownify(banner.content)} class="mb-8" />
        </div>
      </div>
    </div>
  </section>
  <!-- /Banner -->

  <!-- Features -->
  <div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-4">
    {
      features.map((feature, index: number) => (
        <section class={`section-sm  ${index % 2 === 0 && "bg-gradient"}`}>
          <div class="flex flex-col items-center justify-between">
            <div
              class={`mb:md-0 mb-6 md:col-5 ${index % 2 !== 0 && "md:order-2"}`}
            >
              <ImageMod
                src={feature.image}
                height={480}
                width={520}
                alt={feature.title}
                format="webp"
              />
            </div>
            <div
              class={`md:col-10 xl:col-6 ${index % 2 !== 0 && "md:order-1"}`}
            >
              <h2 set:html={markdownify(feature.title)} class="mb-4" />
              <p set:html={markdownify(feature.content)} class="mb-4 text-lg" />
              {feature.button.enable && (
                <a
                  class={`btn btn-primary mt-5 ${index % 2 !== 0 && "mb-5"}`}
                  href={feature.button.link}
                >
                  {feature.button.label}
                </a>
              )}
            </div>
          </div>
        </section>
      ))
    }
  </div>
  <!-- /Features -->

  <!-- Lucky -->
  <section class="section-sm bg-gradient">
    <div class="container">
      <h3>Use a Calculadora de Lucky</h3>
      <div class="lg:col-12">
        <LuckyCalculator client:load />
      </div>
    </div>
  </section>
  <!-- /Lucky -->
</Base>
